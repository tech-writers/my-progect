
const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

const SOURCE_DIR = path.resolve(__dirname, '../../bpmn-processes');
const TARGET_DIR = path.resolve(__dirname, '../components/apu/modules/bpmn/images');
const VIEWER_PATH = 'file://' + path.resolve(__dirname, 'viewer.html');

async function convertBpmnFile(browser, bpmnPath, svgPath) {
  const page = await browser.newPage();
  const xml = fs.readFileSync(bpmnPath, 'utf8');

  await page.goto(VIEWER_PATH);
  await page.evaluate((xml) => window.loadDiagram(xml), xml);
  await page.waitForFunction('window.isDiagramLoaded === true');

  const svg = await page.evaluate(() => window.getSVG());

  fs.mkdirSync(path.dirname(svgPath), { recursive: true });
  fs.writeFileSync(svgPath, svg);
  console.log(`‚úÖ SVG —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${svgPath}`);

  // ‚ûï –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ –∫—Ä–∏–≤—ã–µ —á–µ—Ä–µ–∑ Inkscape
  try {
    execSync(`inkscape "${svgPath}" --export-type=svg --export-plain-svg --export-text-to-path --export-filename="${svgPath}"`);
    console.log(`‚úíÔ∏è  –¢–µ–∫—Å—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ –∫—Ä–∏–≤—ã–µ (Inkscape)`);
  } catch (e) {
    console.warn(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Inkscape –¥–ª—è ${svgPath}`);
  }

  await page.close();
}

async function walkAndConvert(dir, baseDir, browser) {
  const entries = fs.readdirSync(dir, { withFileTypes: true });

  for (const entry of entries) {
    const fullPath = path.join(dir, entry.name);
    const relPath = path.relative(baseDir, fullPath);

    if (entry.isDirectory()) {
      await walkAndConvert(fullPath, baseDir, browser);
    } else if (entry.isFile() && entry.name.endsWith('.bpmn')) {
      const svgPath = path.join(TARGET_DIR, relPath.replace(/\.bpmn$/, '.svg'));
      await convertBpmnFile(browser, fullPath, svgPath);
    }
  }
}

(async () => {
  console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ BPMN ‚Üí SVG —Å –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º –∏ –∫–æ–Ω—Ç—É—Ä–∞–º–∏ —Ç–µ–∫—Å—Ç–∞...');
  const browser = await puppeteer.launch({ headless: "new" });

  await walkAndConvert(SOURCE_DIR, SOURCE_DIR, browser);

  await browser.close();
  console.log('‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.');
})();
